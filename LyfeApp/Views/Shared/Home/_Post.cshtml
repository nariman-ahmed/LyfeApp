@inject UserManager<UserModel> UserManager
@model PostModel

@{
    TimeSpan timeSpanSinceCreated = DateTime.Now.Subtract(Model.DateCreated);

    string displayTime = "";
    if(timeSpanSinceCreated.TotalDays >= 1){
        displayTime = $"{timeSpanSinceCreated.Days}d ago";
    }
    else if(timeSpanSinceCreated.TotalHours >= 1){
        displayTime = $"{timeSpanSinceCreated.Hours}h ago";
    }
    else if(timeSpanSinceCreated.TotalMinutes >= 1){
        displayTime = $"{timeSpanSinceCreated.Minutes}m ago";
    }
    else {
        displayTime = "Just Now";
    }

    int loggedInUserId = int.TryParse(User.FindFirstValue(ClaimTypes.NameIdentifier), out int parsedId) ? parsedId : 0;

    bool isLiked = Model.Likes.Any(l => l.UserId == loggedInUserId);
    bool isFavorited = Model.Favorites.Any(f => f.UserId == loggedInUserId);

    var currentUser = await UserManager.GetUserAsync(User);
    string currentUserProfilePic = !string.IsNullOrEmpty(currentUser?.ProfilePicUrl) ? 
        Url.Content("~/"+currentUser.ProfilePicUrl) : 
        Url.Content("~/images/avatar/user.png");

    bool showAllComments = ViewData["ShowAllComments"] as bool? ?? false;
    @* ViewData di data bastelemha men another view, not the backend *@

}

<div id="post-@Model.Id" class="post-container bg-white rounded-xl shadow-sm text-sm font-medium border1">

    @* Post heading *@
    <div class="flex gap-3 sm:p-4 p-2.5 text-sm font-medium">
        <a asp-controller="Users" asp-action="Details" asp-route-userId="@Model.UserId">
            <img src="@(!string.IsNullOrEmpty(Model.User.ProfilePicUrl) ? Url.Content("~/"+Model.User.ProfilePicUrl) : Url.Content("~/images/avatar/user.png"))" class="w-9 h-9 rounded-full" />
        </a>
        <div class="flex-1">
            <a asp-controller="Users" asp-action="Details" asp-route-userId="@Model.UserId">
                <h4 class="text-black">@Model.User.FullName</h4>
                <div class="text-xs text-gray-500/80">@displayTime</div>
            </a>
        </div>

        <div class="-mr-1">
            <button type="button" class="button-icon w-8 h-8"> <ion-icon class="text-xl" name="ellipsis-horizontal"></ion-icon> </button>
            <div class="w-[245px] post-options-dropdown" uk-dropdown="pos: bottom-right; animation: uk-animation-scale-up uk-transform-origin-top-right; animate-out: true; mode: click">
                
                @if(Model.UserId == loggedInUserId)
                {
                    <form asp-controller="Home" asp-action="TogglePostPrivacy">
                        <input type="hidden" name="PostId" value="@Model.Id" />
                        <button type="submit" class="hover:!bg-red-50 icon-link">
                            <ion-icon name="@(Model.IsPrivate ? "lock-closed-outline" : "lock-open-outline")"></ion-icon>
                            Set as @(Model.IsPrivate ? "public" : "private")
                        </button>
                    </form>
                }
                

                <hr>
                
                @if(Model.UserId == loggedInUserId)
                {
                    <button type="button" onclick="openPostDeleteConfirmation('@Model.Id')" class="text-red-400 hover:!bg-red-50 icon-link delete-post-btn">
                        <ion-icon name="trash-bin-outline"></ion-icon>  Delete Post
                    </button>
                }

                <form asp-controller="Home" asp-action="Report">
                    <input type="hidden" name="PostId" value="@Model.Id" />
                    <button type="submit" class="hover:!bg-red-50 icon-link">
                        <ion-icon class="text-xl shrink-0" name="flag-outline"></ion-icon>  Report
                    </button>
                </form>
            </div>
        </div>
    </div>

    @* Post content *@
    <a asp-controller="Home" asp-action="PostDetails" asp-route-postId="@Model.Id">
        <div class="sm:px-4 p-2.5 pt-0 w-full">
            <p class="font-normal">
                @Model.Content
            </p>
        </div>
    </a>

    @if (!string.IsNullOrEmpty(Model.ImageUrl))
    {
        <a asp-controller="Home" asp-action="PostDetails" asp-route-postId="@Model.Id">
            <div class="relative w-full h-full">
                <img src="@Url.Content("~/"+Model.ImageUrl)" class="sm:rounded-lg w-full h-full object-cover" />
            </div>
        </a>
    }


    @* Icons *@
    <div class="sm:p-4 p-2.5 flex items-center gap-4 text-xs font-semibold">

        <div class="flex items-center gap-2.5">
            <form asp-controller="Home" asp-action="TogglePostLike" >
                @Html.AntiForgeryToken()
                <input type="hidden" name="PostId" value="@Model.Id" />
                <button type="submit" class="button-icon like-button @(isLiked ? "text-red-500 bg-red-100" : "" )">
                    @* check if the like that exists is done by the logged in user. *@
                    <ion-icon class="text-lg" name="@(isLiked ? "heart" : "heart-outline")"></ion-icon>
                </button>
            </form>
            <a href="#">@Model.Likes.Count</a>
        </div>

        <div class="flex items-center gap-3">
            <a class="button-icon">
                <ion-icon class="text-lg" name="chatbubble-ellipses-outline"></ion-icon>
            </a>
            <a href="#">@Model.Comments.Count</a>
        </div>

        <div class="ml-auto"></div>

        <div class="flex items-center gap-2">
            <form asp-controller="Home" asp-action="TogglePostFavorites">
                @Html.AntiForgeryToken()
                <input type="hidden" name="PostId" value="@Model.Id"/>
                <button type="submit" class="button-icon ml-auto favorite-button @(isFavorited ? "text-orange-500 bt-orange-100" : "" )">
                    <ion-icon class="text-lg" name="@(isFavorited ? "bookmark" : "bookmark-outline" )"></ion-icon>
                </button>
            </form>
            @if(Model.Favorites.Count>0){
                 <a href="#">@Model.Favorites.Count</a>
            }
        </div>
    </div>

    @* Add comment section *@
    <div>
        <div  class="p-2.5 border-t border-gray-100 font-normal space-y-3 relative">

            @foreach(var comment in showAllComments
            ? Model.Comments.OrderByDescending(n => n.DateCreated) 
            : Model.Comments.OrderByDescending(n => n.DateCreated).Take(2))
            {
                TimeSpan commentTimeSpanSincePosted = DateTime.UtcNow.Subtract(comment.DateCreated);

                string commentDisplayTime = commentTimeSpanSincePosted switch
                {
                    var t when t.TotalDays >= 1 => $"{(int)t.TotalDays}d ago",
                    var t when t.TotalHours >= 1 => $"{(int)t.TotalHours}h ago",
                    var t when t.TotalMinutes >= 1 => $"{(int)t.TotalMinutes}m ago",
                    _ => "Just now"
                };

                <div class="flex items-start gap-3 relative">
                    <a asp-controller="Users" asp-action="Details" asp-route-userId="@comment.UserId">
                        <img src="@(!string.IsNullOrEmpty(comment.User.ProfilePicUrl) ? Url.Content("~/"+comment.User.ProfilePicUrl) : Url.Content("~/images/avatar/user.png"))" class="w-6 h-6 mt-1 rounded-full" />
                    </a>
                    <div class="flex-1">
                        <div class="flex justify-content-between">
                            <a asp-controller="Users" asp-action="Details" asp-route-userId="@comment.UserId" class="text-black font-medium inline-block flex-grow">
                                @comment.User.FullName
                            </a>
                            <small>@commentDisplayTime</small>
                        </div>
                        <div class="flex items-center justify-between">
                            <p class="mt-0.5 flex-1">
                                @comment.Content
                            </p>

                            @if(comment.UserId == loggedInUserId || Model.UserId == loggedInUserId)
                            {
                                <form asp-controller="Home" asp-action="DeleteComment" class="ml-2 remove-comment-form">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="CommentId" value="@comment.Id"/>
                                    <input type="hidden" name="PostId" value="@comment.PostId"/>
                                    <button type="submit" class="text-red-500 text-xs hover:text-red-700" title="Remove post comment">
                                        <ion-icon name="trash-outline"></ion-icon>
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            }

            @if(Model.Comments.Count >= 3 && !showAllComments)
            {
                <div class="p-1.5">
                    <a asp-controller="Home" asp-action="PostDetails" asp-route-postId="@Model.Id">
                        Show all comments
                    </a>
                </div>
            }

        </div>

        <form asp-controller="Home" asp-action="CreateComment" class="add-comment-form">
            @Html.AntiForgeryToken()
            <div class="sm:px-4 sm:py-3 p-2.5 border-t border-gray-100 flex items-center gap-1">

                <a asp-controller="Users" asp-action="Details" asp-route-userId="@loggedInUserId">
                    <img src="@currentUserProfilePic" class="w-6 h-6 rounded-full" />
                </a>
            
                <input type="hidden" name="PostId" value="@Model.Id" />
                <div class="flex-1 relative overflow-hidden h-10">
                    <textarea name="Content" placeholder="Add Comment...." rows="1" class="w-full resize-none !bg-transparent px-4 py-2 focus:!ring-transparent" required></textarea>
                </div>

                <button type="submit" class="text-sm rounded-full py-1.5 px-3.5 bg-secondery">Comment</button>
        
            </div>
        </form>
    </div>

</div>

